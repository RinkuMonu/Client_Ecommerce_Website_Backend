name: Deploy Node.js Backend to CWP Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Compress Backend Code (exclude storage, node_modules)
        run: tar --exclude='./storage' --exclude='./node_modules' --exclude='.DS_Store' --exclude='./.git' -czvf backend.tar.gz . || true



      - name: 🚀 Upload to Server via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.BACKEND_SSH_HOST }}
          username: ${{ secrets.BACKEND_SSH_USERNAME }}
          password: ${{ secrets.BACKEND_SSH_PASSWORD }}
          port: ${{ secrets.BACKEND_SSH_PORT }}
          source: "backend.tar.gz"
          target: "/home/apijajam/"

      - name: 🔐 SSH Deploy with .env Safety
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BACKEND_SSH_HOST }}
          username: ${{ secrets.BACKEND_SSH_USERNAME }}
          password: ${{ secrets.BACKEND_SSH_PASSWORD }}
          port: ${{ secrets.BACKEND_SSH_PORT }}
          script: |
            echo "🔐 Backing up .env (if exists)"
            cd /home/apijajam/public_html/Client_Ecommerce_Website_Backend
            if [ -f .env ]; then
              cp .env /home/apijajam/.env_backup
            fi

            echo "🛡️ Full code backup"
            timestamp=$(date +%Y%m%d_%H%M%S)
            mkdir -p /home/apijajam/backup_backend
            cp -r . /home/apijajam/backup_backend/backup_$timestamp

            echo "📦 Extracting new backend.tar.gz"
            tar -xzvf /home/apijajam/backend.tar.gz -C .
            rm /home/apijajam/backend.tar.gz

            echo "♻️ Restoring .env (if backup exists)"
            if [ -f /home/apijajam/.env_backup ]; then
              cp /home/apijajam/.env_backup .env
              rm /home/apijajam/.env_backup
            fi

            echo "📦 Installing packages"
            npm install --legacy-peer-deps

            echo "🚀 Restarting Node app using PM2"
            pm2 restart api.jajamblockprients.com  || pm2 start index.js --name api.jajamblockprients.com 

            echo "✅ Deployment finished!"
            